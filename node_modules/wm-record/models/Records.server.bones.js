models.Records.prototype.sync = function(method, model, options) {
    var success = options.success, error = options.error;

    var Stash = new Bones.plugin.backends.Stash('record');
    Stash.sync.apply(this, arguments);
};

models.Records.prototype.filterByNode = function(id) {
    var records = new Bones.plugin.models.Records();
    
    var data = this.filter(function(record) {
        return record.get('node_id') === id;
    });
    
    records.add(data, {silent: true});
    return records;
}

models.Records.prototype.filterByCheck = function(id) {
    var records = new Bones.plugin.models.Records();
    
    var data = this.filter(function(record) {
        return record.get('check_id') === id;
    });
    
    records.add(data, {silent: true});
    return records;
}

models.Records.prototype.filterByDate = function(from, to) {
    if (!from && !to) return this;
    
    var records = new Bones.plugin.models.Records();
    
    var data = this.filter(function(record) {
        var result = false;
        if (from && to) {
            if (record.get('timestamp') > from && record.get('timestamp') < to) {
                result = true;
            }
        } else if (from) {
            if (record.get('timestamp') > from) result = true;
        } else if (to) {
            if (record.get('timestamp') < to) result = true;
        }
        return result;
    });
    
    records.add(data, {silent: true});
    return records;
    
}