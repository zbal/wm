var fs = require('fs');
var path = require('path');


models.Node.prototype.sync = function(method, model, options) {
    var success = options.success, error = options.error;

    this.setDefaults();

    // .
    this.setID();

    // Update date on save
    if (method === 'create' || method === 'update') {
        if (!this.get('modified_date')) {
            var modified_date = this.get('created_date');
        } else {
            var modified_date = new Date().getTime();            
        }
        
        this.set({
            modified_date: modified_date
        }, {
            silent: true
        });
    }

    var Stash = new Bones.plugin.backends.Stash('node');
    Stash.sync.apply(this, arguments);
};

// Later should move that function over to the client side
// to allow suggestion of location
// TODO: set as async call - no big deal for now; only used on creation of new node
models.Node.prototype.setGeoSync = function(options) {
    var model = this;
    
    options || (options = {});
    
    var error = options.error || function() {};
    var success = options.success || function() {};
    
    var geoip = require('geoip');
    var geoipDatabase = path.resolve(require.resolve('wm-node'), '../lib/GeoLiteCity.dat');
    fs.exists(geoipDatabase, function(exists) {
        if (!exists) return error(new Error('Missing GeoIP database'));
        
        var city = new geoip.City(geoipDatabase);

        var data = city.lookupSync(model.get('ip'));
        if (data) {
            model.set({
                continent_code: data.continent_code,
                country_code: data.country_code,
                city: data.city
            }, {
                silent: true
            });
        }
        return success();
    });
}